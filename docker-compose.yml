version: '3.5'
services:
  mariadb:
    image: mariadb:10
    container_name: ${DB_HOST}
#    ports:
#      - ${DB_PORT}:3306
    volumes:
      - ${DB_PATH}:/var/lib/mysql
      - ./setup:/docker-entrypoint-initdb.d
    restart: always
    networks:
      gitnet:
        ipv4_address: 192.168.10.3
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${dbrootpw}
      - MYSQL_DATABASE=gitea
      - MYSQL_USER=${gitea_user}
      - MYSQL_PASSWORD=${gitea_secret}

  gitea:
    image: gitea/gitea:1
    container_name: ${GITEA_HOST}
    volumes:
      - ./data:/data
#    ports:
#      - ${GITEA_HTTP_PORT}:3000
#      - ${GITEA_SSH_PORT}:22
    depends_on:
      - mariadb
    restart: always
    networks:
      gitnet:
        ipv4_address: 192.168.10.4
    env_file:
      - .env

  drone-server:
    image: drone/drone:1
    container_name: ${DRONE_HOST}
#    ports:
#      - ${DRONE_HTTP_PORT}:80
#      - ${DRONE_SSL_PORT}:443
    volumes:
#      - ./drone/drone-selfsigned.crt:/cert/server.crt
#      - ./drone/drone-selfsigned.key:/cert/server.key
      - ./drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      gitnet:
        ipv4_address: 192.168.10.5
    depends_on:
      - gitea
    env_file:
      - .env
    environment:
      - DRONE_GITEA_CLIENT_ID=${DRONE_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_CLIENT_SECRET}
      - DRONE_GITEA_SERVER=http://${GITEA_HOST}:${GITEA_HTTP_PORT}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_HOST}
      - DRONE_SERVER_PROTO=http
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_TLS_AUTOCERT=false
      - DRONE_LOGS_TRACE=true
#      - DRONE_AGENTS_ENABLED=true
#      - DRONE_TLS_CERT=/cert/server.crt
#      - DRONE_TLS_KEY=/cert/server.key
#      - DRONE_GITEA_SKIP_VERIFY=true
#      - DRONE_TOKEN=...

  drone-docker-runner:
    image: drone/drone-runner-docker:1
    container_name: ${DRONE_DOCKER_RUNNER_HOST}
#    ports:
#      - 3000:3000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      gitnet:
        ipv4_address: 192.168.10.6
    depends_on:
      - drone-server
    env_file:
      - .env
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=${DRONE_HOST}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=${DRONE_DOCKER_RUNNER_HOST}  
      - DRONE_LOGS_TRACE=true
      - DRONE_RUNNER_NETWORKS=gitnet

  drone-ssh-runner:
    image: drone/drone-runner-ssh
    container_name: ${DRONE_SSH_RUNNER_HOST}
#     ports:
#       - 3000:3000
    restart: always
    networks:
      gitnet:
        ipv4_address: 192.168.10.7
    depends_on:
      - drone-server
    env_file:
      - .env
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=${DRONE_HOST} 
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_UI_USERNAME=${DRONE_SSH_RUNNER_USER}
      - DRONE_UI_PASSWORD=${DRONE_SSH_RUNNER_SECRET}
#      - DRONE_DEBUG=true
#      - DRONE_TRACE=true

# Networks
#
networks:
  gitnet:
    name: gitnet
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
#          gateway: 192.168.10.254
#        - subnet: "2001:3984:3989::/64"
#          gateway: "2001:3984:3989::1"
    external: false
